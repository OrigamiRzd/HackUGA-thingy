/*
* Hangman2.java
* Author: Mohd Hasan
* Submission Date: [10/16/15]
*
* Purpose: This program plays a hangman game with different sets of rules
*
* Statement of Academic Honesty:
*
* The following code represents my own work. I have neither
* received nor given inappropriate assistance. I have not copied
* or modified code from any source other than the course webpage
* or the course textbook. I recognize that any unauthorized
* assistance or plagiarism will be handled in accordance with
* the University of Georgia's Academic Honesty Policy and the
* policies of this course. I recognize that my work is based
* on an assignment created by the Department of Computer
* Science at the University of Georgia. Any publishing
* or posting of source code for this project is strictly
* prohibited unless you have written consent from the Department
* of Computer Science at the University of Georgia.
*/

// imports the Scanner
import java.util.Scanner;

public class Hangman2 {

	//used to see the word. For Testing purposes. False will hide the word
	private static final boolean testingMode = true;
	
	public static void main(String[] args) {
		
		// creates the Keyboard Scanner
		Scanner Keyboard = new Scanner(System.in);
		
		//Ask user for the difficulty level
		System.out.println("Enter your difficulty: Easy (e), Intermediate (i), or Hard (h)"); // asks user to input their game setting
		
		// user inputs their difficulty level
		String dLevel = Keyboard.nextLine();
		
		// obtains the char at index 0
		char startPosition = dLevel.charAt(0);
		
				// typing anything that starts with "e" will continue to easy mode
				if (startPosition == 'e' || startPosition =='E')
					{
						System.out.println("going to easy mode");
					}
		
				// typing anything that starts with "i" will continue to Intermediate mode
				else if (startPosition == 'i' || startPosition =='I')
					{
						System.out.println("going to intermediate mode");
					}
				// typing anything that starts with "h" will continue to hard mode
				else if (startPosition == 'h' || startPosition =='H')
					{
						System.out.println("going to hard mode");
					}
				// if anything else if typed then the program wll keep asking the user until a correct input in typed "INPUT VALIDATION"
				else 
					{
						while (true)
							{
								// first it will print an error message then ask again
								System.out.println("Invalid difficulty. Try Again...\n" + "Enter your difficulty: Easy (e), Intermediate (i), or Hard (h)");
								// You know retype your difficulty level
								dLevel = Keyboard.nextLine();
								// it will recheck the first char at index 0 to see it is a valid input
								startPosition = dLevel.charAt(0);
									
								if (startPosition == 'e' || startPosition =='E')
									{
										System.out.println("going to easy mode");
										//it you make it here the program jump out of the loop and moves on
										break;
									}
		
								else if (startPosition == 'i' || startPosition =='I')
									{
										System.out.println("going to intermediate mode");
										break;
									}
			
								else if (startPosition == 'h' || startPosition =='H')
									{
										System.out.println("going to hard mode");
										break;
									}
							}
					}
		
		// grabs the random word from the website
				
		String secret = RandomWord.newWord();
				
		String hidden = secret;	
		
		if (testingMode)
			{
				System.out.println("The secret word is: " + secret);
			}
				
		String newHidden = hidden.replaceAll("a","-");
		newHidden = newHidden.replaceAll("a","-");
		newHidden = newHidden.replaceAll("b","-");
		newHidden = newHidden.replaceAll("c","-");
		newHidden = newHidden.replaceAll("d","-");
		newHidden = newHidden.replaceAll("e","-");
		newHidden = newHidden.replaceAll("f","-");
		newHidden = newHidden.replaceAll("g","-");
		newHidden = newHidden.replaceAll("h","-");
		newHidden = newHidden.replaceAll("i","-");
		newHidden = newHidden.replaceAll("j","-");
		newHidden = newHidden.replaceAll("k","-");
		newHidden = newHidden.replaceAll("l","-");
		newHidden = newHidden.replaceAll("m","-");
		newHidden = newHidden.replaceAll("n","-");
		newHidden = newHidden.replaceAll("o","-");
		newHidden = newHidden.replaceAll("p","-");
		newHidden = newHidden.replaceAll("q","-");
		newHidden = newHidden.replaceAll("r","-");
		newHidden = newHidden.replaceAll("s","-");
		newHidden = newHidden.replaceAll("t","-");
		newHidden = newHidden.replaceAll("u","-");
		newHidden = newHidden.replaceAll("v","-");
		newHidden = newHidden.replaceAll("w","-");
		newHidden = newHidden.replaceAll("x","-");
		newHidden = newHidden.replaceAll("y","-");
		newHidden = newHidden.replaceAll("z","-");
		
		System.out.println("The word is: " + newHidden);		
		
		System.out.print("Please enter the letter you want to guess: ");
		String letter = Keyboard.nextLine();
		
		System.out.println("Please enter the spaces you want to check (separated by spaces): ");
		String spaces = Keyboard.nextLine();

		
		Keyboard.close(); // closes Scanner method
		

	}

}
